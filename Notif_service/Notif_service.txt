
Requirement : To make a notification service which can be integrated with our existing system
_______________________
Functional reqmts : send notidication, diff types of notifications, prioritization
Non Functional reqmts : Scalability, Pluggable, Low latency

_______________________
Major modules : IMS(identity Mgmt System), Validition and Priority Module, Kafka queues, 
Consumers for processing queue, User and Notification tables, Retry queue

basic working :

The client makes an api call to the notification server. 

The server does validation checks and several other constraints which depend
on the use cases and requirements.

There will be notification handler service which will verify various criteria with user db.

Then to account for prioritization, there will be different topics in Kafka queue(K1), i.e. higher
and lower priority topics.

Now there will be two services (which are essentially the consumers of this queue(K1), which will 
handle sms and email respectively. 
We can have separate consumers for hiigh priority and low priority queues.

The json objects will be used to make the api call to the third party service.

In case of success, we can store the response in Notification table for logging purposes
and for failure, we can put in a retry queue for further processing.

_______________________
Use cases:
1 How to check for priority of notifications
2 How to limit number of notifications sent in a day to a particular User
3 How to handle the pause and unpause functionalities?
4 How to integrate more third party service providers?
5 How to handle bulk notifs?

_______________________
(1) prioritizationcan be done by having diff topics
(2, 3) The notif handler service makes calls to the db to check for user preferences and 
for no of notifications sent.
(4) To integrate more service providers we need to add an extra consumer or make an extra api 
call from the sms service.
(5) For bulk sms, we need to run something like a batch job, which fetches data from a db
preferably NoSQL (Mongo), and then makes an api call to oput notifcation server.
and if this makes the no of api calls too large, we can go for a rate limiter or
and extra queue.



